// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`graphql-loader fail-invalid-document 1`] = `
Array [
  "./test/fixtures/fail-invalid-document/query.graphql
Module build failed: GraphQLError: Syntax Error GraphQL request (2:3) Expected Name, found [

1: query X {
2:   []
     ^
3: }
",
]
`;

exports[`graphql-loader fail-invalid-field 1`] = `
Array [
  "./test/fixtures/fail-invalid-field/query.graphql
Cannot query field \\"q\\" on type \\"Y\\". Did you mean \\"z\\"?
GraphQLError: Cannot query field \\"q\\" on type \\"Y\\". Did you mean \\"z\\"?",
]
`;

exports[`graphql-loader fail-invalid-schema-path 1`] = `
Array [
  "./test/fixtures/fail-invalid-schema-path/query.graphql
Module build failed: Error: Can't resolve './bad.json' in '/Users/stephen/git/graphql-loader/test/fixtures/fail-invalid-schema-path'",
]
`;

exports[`graphql-loader fail-missing-fragment 1`] = `
Array [
  "./test/fixtures/fail-missing-fragment/query.graphql
Unknown fragment \\"Q\\".
GraphQLError: Unknown fragment \\"Q\\".",
]
`;

exports[`graphql-loader fail-missing-schema-path 1`] = `
Array [
  "./test/fixtures/fail-missing-schema-path/query.graphql
Module build failed: Error: schema option must be passed if validate is true",
]
`;

exports[`graphql-loader fragments 1`] = `
Object {
  "definitions": Array [
    Object {
      "directives": Array [],
      "kind": "OperationDefinition",
      "name": Object {
        "kind": "Name",
        "value": "X",
      },
      "operation": "query",
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "x",
            },
            "selectionSet": null,
          },
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "y",
            },
            "selectionSet": null,
          },
          Object {
            "directives": Array [],
            "kind": "FragmentSpread",
            "name": Object {
              "kind": "Name",
              "value": "Z",
            },
          },
        ],
      },
      "variableDefinitions": Array [],
    },
    Object {
      "directives": Array [],
      "kind": "FragmentDefinition",
      "name": Object {
        "kind": "Name",
        "value": "Z",
      },
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "z",
            },
            "selectionSet": null,
          },
        ],
      },
      "typeCondition": Object {
        "kind": "NamedType",
        "name": Object {
          "kind": "Name",
          "value": "Z",
        },
      },
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 57,
    "start": 0,
  },
}
`;

exports[`graphql-loader fragments-common-duplicates 1`] = `
Object {
  "definitions": Array [
    Object {
      "directives": Array [],
      "kind": "OperationDefinition",
      "name": Object {
        "kind": "Name",
        "value": "X",
      },
      "operation": "query",
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "directives": Array [],
            "kind": "FragmentSpread",
            "name": Object {
              "kind": "Name",
              "value": "a",
            },
          },
          Object {
            "directives": Array [],
            "kind": "FragmentSpread",
            "name": Object {
              "kind": "Name",
              "value": "b",
            },
          },
        ],
      },
      "variableDefinitions": Array [],
    },
    Object {
      "directives": Array [],
      "kind": "FragmentDefinition",
      "name": Object {
        "kind": "Name",
        "value": "A",
      },
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "directives": Array [],
            "kind": "FragmentSpread",
            "name": Object {
              "kind": "Name",
              "value": "C",
            },
          },
        ],
      },
      "typeCondition": Object {
        "kind": "NamedType",
        "name": Object {
          "kind": "Name",
          "value": "A",
        },
      },
    },
    Object {
      "directives": Array [],
      "kind": "FragmentDefinition",
      "name": Object {
        "kind": "Name",
        "value": "C",
      },
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "c",
            },
            "selectionSet": null,
          },
        ],
      },
      "typeCondition": Object {
        "kind": "NamedType",
        "name": Object {
          "kind": "Name",
          "value": "C",
        },
      },
    },
    Object {
      "directives": Array [],
      "kind": "FragmentDefinition",
      "name": Object {
        "kind": "Name",
        "value": "B",
      },
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "directives": Array [],
            "kind": "FragmentSpread",
            "name": Object {
              "kind": "Name",
              "value": "C",
            },
          },
        ],
      },
      "typeCondition": Object {
        "kind": "NamedType",
        "name": Object {
          "kind": "Name",
          "value": "B",
        },
      },
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 71,
    "start": 0,
  },
}
`;

exports[`graphql-loader simple 1`] = `
Object {
  "definitions": Array [
    Object {
      "directives": Array [],
      "kind": "OperationDefinition",
      "name": Object {
        "kind": "Name",
        "value": "X",
      },
      "operation": "query",
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "x",
            },
            "selectionSet": null,
          },
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "y",
            },
            "selectionSet": null,
          },
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "z",
            },
            "selectionSet": null,
          },
        ],
      },
      "variableDefinitions": Array [],
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 24,
    "start": 0,
  },
}
`;

exports[`graphql-loader validator 1`] = `
Object {
  "definitions": Array [
    Object {
      "directives": Array [],
      "kind": "OperationDefinition",
      "name": Object {
        "kind": "Name",
        "value": "X",
      },
      "operation": "query",
      "selectionSet": Object {
        "kind": "SelectionSet",
        "selections": Array [
          Object {
            "alias": null,
            "arguments": Array [],
            "directives": Array [],
            "kind": "Field",
            "name": Object {
              "kind": "Name",
              "value": "y",
            },
            "selectionSet": Object {
              "kind": "SelectionSet",
              "selections": Array [
                Object {
                  "alias": null,
                  "arguments": Array [],
                  "directives": Array [],
                  "kind": "Field",
                  "name": Object {
                    "kind": "Name",
                    "value": "z",
                  },
                  "selectionSet": null,
                },
              ],
            },
          },
        ],
      },
      "variableDefinitions": Array [],
    },
  ],
  "kind": "Document",
  "loc": Object {
    "end": 28,
    "start": 0,
  },
}
`;
